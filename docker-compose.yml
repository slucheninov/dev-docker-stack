version: '3'
services:

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/public
      - ./nginx.localhost:/etc/nginx/conf.d #uncomment this line if certbot generate for the first time and run ./init-letsencrypt.sh
      #- ./nginx:/etc/nginx/conf.d #uncomment this line after certbot generated cert & comment line above. Then run docker-compose up/docker-compose up -d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    environment: 
      - TZ=Europe/Kyiv
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf/:/etc/letsencrypt
      - ./certbot/logs/:/var/log/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    environment: 
      - TZ=Europe/Kyiv
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  php:
    build:
      context: .
      dockerfile: php/Dockerfile
    volumes:
      - .:/var/www
    restart: unless-stopped
    environment: 
      - TZ=Europe/Kyiv

  mysql:
    image: mysql:8
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=onlylocalhost
      - MYSQL_USER=wmaster
      - MYSQL_PASSWORD=1wsx2qaz3
      - MYSQL_DATABASE=wmaster
      - TZ=Europe/Kyiv
    volumes:
      - "mysql_data:/var/lib/mysql"

volumes:
  mysql_data: { driver: local }
